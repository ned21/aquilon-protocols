// -*- cpy-indent-level: 4; indent-tabs-mode: nil -*-
// ex: set expandtab softtabstop=4 shiftwidth=4:
package aqdsystems;

import "aqdlocations.proto";

message Host {
    required string hostname = 1;
    optional string fqdn = 2;
    optional string mac = 3;
    optional string ip = 4;
    optional Archetype archetype = 5 [deprecated=true];
    optional string dns_domain = 6;
    optional Domain domain = 7;
    optional string status = 8;
    optional Machine machine = 9;
    optional string sysloc = 10;
    optional string type = 11 [deprecated=true];
    optional Personality personality = 12;
    optional OperatingSystem operating_system = 13;
    optional string cluster = 14;
    repeated Resource resources = 15;
    optional int32 owner_eonid = 16;
    repeated NamedServiceInstance services_used = 17;
    repeated NamedServiceInstance services_provided = 18;
    repeated EonIdMap eonid_maps = 19;
    optional string sandbox_author = 20;
    optional VirtualSwitch virtual_switch = 21;
}

message HostList {
    repeated Host hosts = 1;
}

message Machine {
    optional string name = 1;
    optional string host = 2;
    optional aqdlocations.Location location = 3;
    optional Model model = 4;
    optional string cpu = 5;
    optional int64 memory = 6;
    repeated Disk disks = 7;
    repeated Interface interfaces = 8;
    optional int32 cpu_count = 9;
    optional string serial_no = 10;

    // Tag values >= 16 are encoded less eficiently, so use them for data that is not common
    optional string uri = 16;
    repeated AddOnModule add_on_modules = 17;
    // We could add "oneof" around vm_cluster and vm_host, but
    // Google::ProtocolBuffers do not support that yet
    optional Cluster vm_cluster = 18;
    optional Host vm_host = 19;
    optional string uuid = 20;
}

message MachineList {
    repeated Machine machines = 1;
}

message ChassisSlot {
    optional int32 number = 1;
    optional string type = 2;

    oneof hardware_entity {
        Machine machine = 8;
        NetworkDevice network_device = 9;
    };
}

message Chassis {
    optional string name = 1;
    optional string primary_name = 2;
    optional aqdlocations.Location location = 3;
    optional Model model = 4;
    optional string serial_no = 5;
    repeated Interface interfaces = 6;
    repeated ChassisSlot slots = 7;
    optional int32 owner_eonid = 8;
}

message ChassisList {
    repeated Chassis chassis = 1;
}

message HardwareDetails {
    enum HardwareType {
        NETWORK_DEVICE = 1;
    };
    required HardwareType hardware_type = 1;
    required string label = 2;
    optional Model model = 3;
    optional aqdlocations.Location location = 4;
    repeated Interface interfaces = 5;
    // Tag values >= 16 are encoded less eficiently, so we use them for data
    // that are not common.  All of the following fall into that category.
    optional string serial_no = 16;
}

message SystemDetails {
    optional Domain domain = 1;
    optional string status = 2;
    optional Personality personality = 3;
    optional OperatingSystem operating_system = 4;
    optional string cluster = 5;
    repeated Resource resources = 6;
    optional int32 owner_eonid = 7;
    // Tag values >= 16 are encoded less eficiently, so
    // use them for data that is not common
    repeated EonIdMap eonid_maps = 16;
    repeated NamedServiceInstance services_used = 17;
    repeated NamedServiceInstance services_provided = 18;
}

message NetworkDevice {
    required string primary_name = 1;
    optional HardwareDetails hardware = 2;
    optional SystemDetails system = 3;
}

message NetworkDeviceList {
    repeated NetworkDevice devices = 1;
}

message Disk {
    optional string device_name = 1;
    optional int64 capacity = 2;
    optional string disk_type = 3;
    optional string wwn = 4;
    optional string address = 5;
    optional string bus_address = 6;
    optional bool snapshotable = 7;
    optional Resource backing_store = 8;
    optional int32 iops_limit = 9;
}

message AddOnModule {
    optional string bus_address = 1;
    optional string device_name = 2;
    optional Model model = 3;
}

message Archetype {
    optional string name = 1;
    optional bool compileable = 2;
    repeated NamedServiceInstance required_services = 3;
    optional string cluster_type = 4;
}

message ArchetypeList {
    repeated Archetype archetypes = 1;
}

message Personality {
    optional string name = 1;
    optional Archetype archetype = 2;
    optional sint32 threshold = 4 [default = -1];
    repeated NamedServiceInstance required_services = 5;
    repeated Feature features = 6;
    optional int32 owner_eonid = 7;
    optional string comments = 8;
    optional bool config_override = 9;
    optional bool cluster_required = 10;
    optional string host_environment = 11;
    optional int32 maint_threshold = 12 [default = -1];
    optional string vmhost_capacity_function = 13;
    optional double vmhost_overcommit_memory = 14;
    repeated EonIdMap eonid_maps = 15;
    optional string stage = 16;
}

message PersonalityList {
    repeated Personality personalities = 1;
}

message Domain {
    optional string name = 1;
    optional string owner = 2;
    enum BranchType {
        DOMAIN = 0;
        SANDBOX = 1;
    }
    optional BranchType type = 3;
    optional bool allow_manage = 4;
    optional string tracked_branch = 5;
}

message DomainList {
    repeated Domain domains = 1;
}

message Model {
    optional string name = 1;
    optional string vendor = 2;
    optional string model_type = 3;
}

message ModelList {
    repeated Model models = 1;
}

message AddressAssignment {
    enum AddressAssignmentType {
        STANDARD = 0;
        SHARED = 1;
    };
    optional AddressAssignmentType assignment_type = 1;
    optional string label = 2;
    optional string ip = 3;
    repeated string fqdn = 4;
    repeated string aliases = 5;
    optional int32 priority = 6;
}

message Interface {
    optional string device = 1;
    optional string mac = 2;
    optional string ip = 3;
    optional bool bootable = 4;
    optional string interface_type = 5;
    optional int32 network_id = 6 [deprecated=true];
    optional string fqdn = 7;
    repeated string aliases = 8;
    optional string bus_address = 9;
    optional Model model = 10;
    repeated AddressAssignment address_assignments = 11;

    optional string port_group_usage = 16;
    optional int64 port_group_tag = 17;
    // This should be redundant...
    optional string port_group_name = 18;
}

enum Lifecycle {
        EVALUATION = 0;
        PRE_PROD = 1;
        EARLY_PROD = 2;
        PRODUCTION = 3;
        PRE_DECOMMISSION = 4;
        INACTIVE = 5;
        WITHDRAWN = 6;
        DECOMMISSIONED = 7;
}

message OperatingSystem {
    optional Archetype archetype = 1;
    optional string name = 2;
    optional string version = 3;
    optional Lifecycle lifecycle = 4;
}

message OperatingSystemList {
    repeated OperatingSystem operating_systems = 1;
}

message Cluster {
    required string name = 1;
    optional string status = 3;
    optional Personality personality = 4;
    optional int32 threshold = 5 [default = -1];
    optional bool threshold_is_percent = 6;
    optional int32 maint_threshold = 7 [default = -1];
    optional bool maint_threshold_is_percent = 8;
    optional Domain domain = 9;
    repeated Host hosts = 10;
    repeated Resource resources = 11;
    repeated NamedServiceInstance aligned_services = 12;
    repeated Personality allowed_personalities = 13;
    optional string vm_to_host_ratio = 14 [deprecated=true];
    optional int32 max_vm_count = 15 [deprecated=true];
    repeated KeyIntPair limits = 16;
    repeated KeyIntPair usage = 17;
    optional int32 max_members = 18;
    optional aqdlocations.Location location_constraint = 19;
    optional string sandbox_author = 20;
    optional VirtualSwitch virtual_switch = 21;
    optional string metacluster = 22;
    repeated Cluster grouped_cluster = 23;
}

message ClusterList {
    repeated Cluster clusters = 1;
}

message MetaCluster {
    required string name = 1;
    optional string status = 2;
    optional Personality personality = 3;
    optional Domain domain = 4;
    repeated Cluster clusters = 5;
    repeated Resource resources = 6;
    repeated NamedServiceInstance services_used = 7;
    optional int32 max_members = 8;
    optional aqdlocations.Location location_constraint = 9;
    optional VirtualSwitch virtual_switch = 10;

    // Uncommon attributes should be >= 16
    repeated Personality allowed_personalities = 16;
    optional string sandbox_author = 17;
}

message MetaClusterList {
    repeated MetaCluster metaclusters = 1;
}

message KeyIntPair {
    required string name = 1;
    required sint64 value = 2;
    optional bool override = 3 [default = false];
}

message NamedServiceInstance {
    required string service = 1;
    optional string instance = 2;
    optional string host_environment = 3;
}

message Resource {
    required string name = 1;
    required string type = 2;
    optional Filesystem fsdata = 3;
    optional Application appdata = 4;
    optional Intervention ivdata = 5;
    optional ServiceAddress service_address = 6;
    optional Hostlink hostlink = 7;
    optional Share share = 8;
    optional RebootSchedule reboot_schedule = 9;
    optional ResourceGroup resourcegroup = 10;
    repeated ClusterAutoStartEntry autostartlist = 11;
    repeated ClusterSystemEntry systemlist = 12;
}

message ResourceList {
    repeated Resource resources = 1;
}

message ResourceGroup {
    optional string required_type = 1;
    repeated Resource resources = 2;
}

message Filesystem {
    optional string fstype = 1;
    optional string mountpoint = 2;
    optional bool mount = 3;
    optional string blockdevice = 4;
    optional string opts = 5;
    optional int32 freq = 6;
    optional int32 passno = 7;
}

message Application {
    optional int32 eonid = 1;
}

message EonIdMap {
    required string target = 1;
    required int32 eonid = 2;
}

message Intervention {
    optional int64 expiry = 1;
    optional string justification = 2;
    optional string users = 3;
    optional string groups = 4;
    optional string disabled = 5;
    optional int64 start = 6;
}

message ServiceAddress {
    required string ip = 1;
    required string fqdn = 2;
    repeated string interfaces = 3;
    repeated string aliases = 4;
    optional NetworkEnvironment network_environment = 5;
}

message Hostlink {
    required string target = 1;
    required string owner_user = 2;
    optional string owner_group = 3;
    optional string mode = 4;
}

message Share {
    optional string server = 1;
    optional string mount = 2;
    optional int32 disk_count = 3;
    optional int32 machine_count = 4;
}

message RebootSchedule {
    optional string time = 1;
    optional string day = 2;
    optional string week = 3;
}

enum Activation {
        NONE = 0;
        REBUILD = 1;
        REBOOT = 2;
        DISPATCH = 3;
}

message Feature {
    required string name = 1;
    required string type = 2;
    optional bool post_personality = 3;
    optional Model model = 4;
    optional string interface_name = 5;
    optional int32 owner_eonid = 6;
    enum Visibility {
        PUBLIC = 0;
        RESTRICTED = 1;
        OWNER_ONLY = 2;
        OWNER_APPROVED = 3;
        LEGACY = 4;
    };
    optional Visibility visibility = 7;
    optional Activation activation = 8;
    optional Activation deactivation = 9;
    optional string comments = 10;
}

message FeatureList {
    repeated Feature features = 1;
}

message PortGroup {
    optional string ip = 1;
    optional int32 cidr = 2;
    optional int64 network_tag = 3;
    optional string usage = 4;
}

message VirtualSwitch {
    required string name = 1;
    repeated PortGroup portgroups = 2;
}

message VirtualSwitchList {
    repeated VirtualSwitch virtual_switches = 1;
}

message LocationPreference {
    repeated aqdlocations.Location location = 1;
    optional string cluster = 2;
    optional aqdlocations.Location prefer = 3;
}

message LocationPreferenceList {
    repeated LocationPreference location_preference = 1;
}

message ClusterAutoStartEntry {
    required string cluster = 1;
    optional string rg = 2;
    required string member = 3;
    required int32 order_idx = 4;
}

message ClusterAutoStartList {
    repeated ClusterAutoStartEntry cluster_autostartlist = 1;
}

message ClusterSystemEntry {
    required string cluster = 1;
    optional string rg = 2;
    required string member = 3;
    required int32 priority = 4;
}

message ClusterSystemList {
    repeated ClusterSystemEntry cluster_systemlist = 1;
}

message DNSEnvironment {
    required string name = 1;
}

message NetworkEnvironment {
    required string name = 1;
    optional aqdlocations.Location location = 2;
    required DNSEnvironment dns_environment = 3;
}

message NetworkEnvironmentList {
    repeated NetworkEnvironment network_environments = 1;
}
